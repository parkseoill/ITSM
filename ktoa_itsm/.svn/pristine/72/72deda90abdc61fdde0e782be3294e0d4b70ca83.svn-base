package truebon.com.dlm.rep.controller;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springmodules.validation.commons.DefaultBeanValidator;

import egovframework.com.cmm.EgovMessageSource;
import truebon.com.dlm.rep.model.ReplaceVO;
import truebon.com.dlm.rep.service.ReplaceService;

@Controller
public class ReplaceController {

	 /* Validator */
	 @Autowired
	 private DefaultBeanValidator beanValidator;
	 
     /** EgovMessageSource */
     @Resource(name="egovMessageSource")
     EgovMessageSource egovMessageSource;
  
     @Resource(name = "ReplaceService")
      private ReplaceService replaceService;
   
     /**
       * 대휴 조회
       */

       @RequestMapping(value="/dlm/rep/ReplaceOffdayMng.do")
       public String ReplaceOffdayMng(@ModelAttribute("searchVO") ReplaceVO searchVO, ModelMap model) throws Exception {
          
          List<ReplaceVO> replaceList = replaceService.selectReplaceList(searchVO);   
         
          List<ReplaceVO> replaceUseList = replaceService.selectReplaceUseList(searchVO);  
          
          List<ReplaceVO> chrgrNameList = replaceService.selectChrgrName(searchVO);  
          
          float repSum = 0;     //총 대휴
          float useSum = 0;     //사용 대휴 합계
          float residnCnt = 0;  //잔여 대휴
	     
          if(!replaceList.isEmpty()){
             repSum = replaceList.get(0).getRepSum(); 
          }

          if(!replaceUseList.isEmpty()){
             useSum = replaceUseList.get(0).getUseSum(); 
          }


          residnCnt = repSum - useSum; 
         
          model.addAttribute("repSum", repSum);  
          model.addAttribute("useSum", useSum);  
          model.addAttribute("residnCnt", residnCnt);  
          
          model.addAttribute("replaceList", replaceList);      
          model.addAttribute("replaceUseList", replaceUseList);
          model.addAttribute("chrgrNameList", chrgrNameList);
          model.addAttribute("searchVO", searchVO);

          return "/truebon/com/dlm/rep/ReplaceOffdayMng";
          
       }


       /**
        * 대휴 생성
        */
       @RequestMapping(value="/dlm/rep/ReplaceOffdayInsert.do")
       public String ReplaceOffdayInsert(@ModelAttribute("searchVO") ReplaceVO searchVO, ModelMap model, @RequestParam List<String> chk, BindingResult bindingResult) throws Exception {         
           
    	   List<ReplaceVO> replaceList = replaceService.selectReplaceList(searchVO); 
    	   
    	   String sLocationUrl = "";
       	   String resultMsg    = "";
       	   
       	   String chkname = "";
       	   String date = "";
       	   String searchdate = "";
       	   
       	   searchdate = searchVO.getSelectedDate2().replace("-", "");
       	   
       	   
       	   //데이터가 중복된 경우
       	   for(int i = 0; i < replaceList.size(); i++) {
       		  chkname = replaceList.get(i).getChrgrNm();
       		  date = replaceList.get(i).getReplacOffdayDate();
       		   
        	  for (int j = 0; j < chk.size(); j++) {

           	      if(chkname.equals(chk.get(j)) && date.equals(searchdate)) { 
             		   resultMsg = searchVO.getSelectedDate2() +" "+ chkname + "의 대휴 생성이 중복되었습니다.";
             		   model.addAttribute("resultMsg", resultMsg);
             		   sLocationUrl = "forward:/dlm/rep/ReplaceOffdayMng.do";
             		   return sLocationUrl;
           	      }
        	  }
       	   }
       	   
       	   for(String insertchkname : chk) {
    	       searchVO.setChrgrNm(insertchkname);
    	       replaceService.insertReOffday(searchVO);
    	       resultMsg = egovMessageSource.getMessage("success.common.insert");
    	       sLocationUrl = "forward:/dlm/rep/ReplaceOffdayMng.do"; 
       	   }

    	   model.addAttribute("resultMsg", resultMsg);
    	   return sLocationUrl;
       }
       
       
       /**
        * 대휴 삭제
        */
       @RequestMapping(value="/dlm/rep/ReplaceOffdaydelete.do")
       public String ReplaceOffdaydelete(@ModelAttribute("searchVO") ReplaceVO searchVO, ModelMap model, @RequestParam List<String> deletechk) throws Exception {         
       	   
    	   String resultMsg    = "";
    	   
    	   for(String deletechkval : deletechk) {
    		   String[] deletechkArr = deletechkval.split(",");
    	       searchVO.setChrgrNo(deletechkArr[0]);
    	       searchVO.setReplacOffdayDate(deletechkArr[1]);
    	       replaceService.deleteReOffday(searchVO);
    	       resultMsg = egovMessageSource.getMessage("success.common.delete");
    	   }
    	   
    	   model.addAttribute("resultMsg", resultMsg);
    	   return "forward:/dlm/rep/ReplaceOffdayMng.do"; 
       }
}